name: Vercel Deploy

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Test serverless entry point
      run: node -c src/index-serverless.js
    
    - name: Test original entry point
      run: node -c src/index.js
    
    - name: Validate vercel.json
      run: |
        if [ ! -f vercel.json ]; then
          echo "‚ùå vercel.json not found"
          exit 1
        fi
        echo "‚úÖ vercel.json exists"
        cat vercel.json
        
    - name: Validate serverless configuration
      run: |
        echo "üîç Checking serverless entry point..."
        if [ ! -f src/index-serverless.js ]; then
          echo "‚ùå src/index-serverless.js not found"
          exit 1
        fi
        echo "‚úÖ Serverless entry point exists"
        
        echo "üîç Checking vercel.json configuration..."
        if ! grep -q "src/index-serverless.js" vercel.json; then
          echo "‚ùå vercel.json doesn't reference src/index-serverless.js"
          exit 1
        fi
        echo "‚úÖ vercel.json properly configured for serverless"

  deploy-vercel:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
    
    - name: Deploy to Vercel
      if: ${{ secrets.VERCEL_TOKEN }}
      run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
    - name: Skip Vercel deployment (no token)
      if: ${{ !secrets.VERCEL_TOKEN }}
      run: |
        echo "‚ö†Ô∏è VERCEL_TOKEN not found in secrets"
        echo "üìù To enable Vercel deployment:"
        echo "1. Go to GitHub repo ‚Üí Settings ‚Üí Secrets and variables ‚Üí Actions"
        echo "2. Add VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID"
        echo "3. Or use manual deployment: vercel --prod"
